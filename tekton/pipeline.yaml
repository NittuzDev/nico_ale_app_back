apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: nico-ale-backend-pipeline
spec:
  params:
    - name: image-repo
      type: string
      description: Docker image name
    - name: app-name
      type: string
      description: the name of the app
  workspaces:
  - name: pipeline-shared-data
  tasks:

# git clone


  - name: clone-repository
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: pipeline-shared-data
    params:
    - name: url
      #remember to fork you acount inside github
      value: https://github.com/nicola-bertoli/nico_ale_app_back.git



# creazione build

  - name: build-image
    taskRef:
      kind: ClusterTask
      name: buildah
    runAfter:
      - clone-repository
    params:
    - name: IMAGE
      value: "quay.io/lumander/nico-ale-backend:$(tasks.clone-repository.results.commit)"
    workspaces:
    - name: source
      workspace: pipeline-shared-data

# # customization
#   - name: kustomize-build
#     runAfter:
#       - build-image
#     params:
#       - name: app-name
#         value: "$(params.app-name)"
#       - name: app-namespace
#         value: "$(context.pipelineRun.namespace)"
#       - name: image-with-tag
#         value: "$(params.image-repo):$(tasks.clone-repository.results.commit)"
#     taskRef:
#       kind: Task
#       name: kustomize-build
#     workspaces:
#       - name: source
#         workspace: pipeline-shared-data

# # apply manifest
#   - name: test-deploy
#     taskRef:
#       kind: Task
#       name: test-deploy
#     params:
#       - name: app-name
#         value: "$(params.app-name)"
#       - name: app-namespace
#         value: "$(context.pipelineRun.namespace)"
#     workspaces:
#       - name: source
#         workspace: pipeline-shared-data
#     runAfter:
#       - kustomize-build

# # gitops continuos deployment
#   - name: gitops
#     taskRef:
#       kind: Task
#       name: commit-manifest
#     params:
#       - name: app-name
#         value: "$(params.app-name)"
#       - name: sha
#         value: "$(tasks.clone-repository.results.commit)"
#     workspaces:
#       - name: source
#         workspace: pipeline-shared-data
#     runAfter:
#       - test-deploy